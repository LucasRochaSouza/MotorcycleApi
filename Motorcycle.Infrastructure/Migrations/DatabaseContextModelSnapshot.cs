// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.DeliveryMan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LicenseImagePath")
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LicenseType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("TaxPayerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.HasIndex("TaxPayerId")
                        .IsUnique();

                    b.ToTable("deliveryman", (string)null);
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.Motorcycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Year")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LicensePlate")
                        .IsUnique();

                    b.ToTable("motorcycle", (string)null);
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.Rent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("DeliveryManId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndPrevision")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long>("MotorcycleId")
                        .HasColumnType("bigint");

                    b.Property<long>("RentPlanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryManId");

                    b.HasIndex("MotorcycleId");

                    b.HasIndex("RentPlanId");

                    b.ToTable("rent", (string)null);
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.RentPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DailyPrice")
                        .HasColumnType("numeric");

                    b.Property<long>("Days")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EarlyDeliveryTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LateDeliveryRate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("rentplan", (string)null);
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.Rent", b =>
                {
                    b.HasOne("UserManagement.Infrastructure.Entities.Sql.DeliveryMan", "DeliveryMan")
                        .WithMany("Rents")
                        .HasForeignKey("DeliveryManId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagement.Infrastructure.Entities.Sql.Motorcycle", "Motorcycle")
                        .WithMany("Rents")
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagement.Infrastructure.Entities.Sql.RentPlan", "RentPlan")
                        .WithMany("Rents")
                        .HasForeignKey("RentPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryMan");

                    b.Navigation("Motorcycle");

                    b.Navigation("RentPlan");
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.DeliveryMan", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.Motorcycle", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("UserManagement.Infrastructure.Entities.Sql.RentPlan", b =>
                {
                    b.Navigation("Rents");
                });
#pragma warning restore 612, 618
        }
    }
}
